name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: write  # Required to create releases and upload assets

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: windows
            arch: amd64
            ext: .exe
            output: daily-task.exe
          - os: linux
            arch: amd64
            ext: ""
            output: daily-task-linux
          - os: darwin
            arch: amd64
            ext: ""
            output: daily-task-mac
          - os: darwin
            arch: arm64
            ext: ""
            output: daily-task-mac-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Install dependencies
        run: go mod download

      - name: Build binary
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
        run: |
          go build -ldflags="-s -w" -o ${{ matrix.output }} .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.output }}
          path: ${{ matrix.output }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/daily-task.exe/daily-task.exe
            artifacts/daily-task-linux/daily-task-linux
            artifacts/daily-task-mac/daily-task-mac
            artifacts/daily-task-mac-arm64/daily-task-mac-arm64
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
